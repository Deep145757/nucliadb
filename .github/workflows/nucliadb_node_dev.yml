name: nucliadb Node (rust + python)

on:
  push:
    branches:
      - nodetest*

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  API_VERSION: 1
  COMPONENT: nucliadb-node
  CONTAINER_REGISTRY: eu.gcr.io/${{ secrets.PROJECT_ID }}
  IMAGE_NAME_BASE_NODE: basenode
  IMAGE_NAME_NODE: node
  IMAGE_NAME_NODE_SIDECAR: node_sidecar

jobs:

  build-rust:
    name: Build and push test index node docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Calculate short sha
        id: env-vars
        run: |-
          HASH=`git rev-parse --short HEAD`
          BRANCH=${GITHUB_REF##*/}
          echo "short_sha=$HASH" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      # As base image is on a private registry, we need to authenticate 1st to
      # be able to download that image
      - name: Setup gcloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Configure Docker
        run: docker login -u oauth2accesstoken -p "$(gcloud auth application-default print-access-token)" https://eu.gcr.io

      # We need to setup buildx to be able to cache with gha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.node
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_NODE}}:dev${{ steps.env-vars.outputs.short_sha }}
