{{ $count := .Values.replicaCount | int }}
{{ $release := .Release }}
{{ $chart := .Chart }}
{{ $values := .Values }}

{{- range $index, $ := until $count }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: node-reader-{{ $index }}
    app.kubernetes.io/name: node-reader
    app.kubernetes.io/instance: {{ $release.Name }}-{{ $index }}
    app.kubernetes.io/managed-by: {{ $release.Service }}
    version: "{{ $chart.Version | replace "+" "_" }}"
    chart: "{{ $chart.Name }}"
  name: node-reader-{{ $index }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-reader-{{ $index }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: "{{$values.nats.port }}"
        traffic.sidecar.istio.io/excludeInboundPorts: "{{$values.serving.metricsPort }}"
      labels:
        app: node-reader-{{ $index }}
        app.kubernetes.io/instance: node-reader-{{ $index }}
        app.kubernetes.io/instance: {{ $release.Name }}
        app.kubernetes.io/managed-by: {{ $release.Service }}
        version: "{{ $chart.Version | replace "+" "_" }}"
        chart: "{{ $chart.Name }}"
      name: node-reader-{{ $index }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nuclia.cloud/nodepool
                    operator: In
                    values:
                      - nucliadb-node
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: statefulset.kubernetes.io/pod-name
                    operator: In
                    values:
                      - node-{{ $index }}
              topologyKey: kubernetes.io/hostname
      tolerations:
        - effect: NoSchedule
          key: nucliadb/node
          operator: Equal
          value: present
      containers:
        - name: node-reader
          command:
            - node_reader
          securityContext:
            privileged: true
          image: "{{ $values.containerRegistry }}/{{ $values.image }}"
          imagePullPolicy: {{ $values.imagePullPolicy }}
          env:
            - name: METRICS_HTTP_PORT
              value: "3031"
            {{- range $key, $value := $values.env }}
            - name: "{{ $key }}"
              value: {{ tpl $value $ | toJson }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: node-config
          livenessProbe:
            exec:
              command:
                - /bin/grpc_health_probe
                - -addr=:10001
                - -service=nodereader.NodeReader
            failureThreshold: 3
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 10001
              name: grpc-reader
              protocol: TCP
            - containerPort: 3031
              name: metrics
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/grpc_health_probe
                - -addr=:10001
                - -service=nodereader.NodeReader
            failureThreshold: 10
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /data
              name: node-pv
{{- if $values.tracing.enabled }}
        - name: jaeger-agent
          image: "jaegertracing/jaeger-agent:{{ $values.tracing.jaegerAgentTag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5775
              name: zk-compact-trft
              protocol: UDP
            - containerPort: 5778
              name: config-rest
              protocol: TCP
            - containerPort: 6831
              name: jg-compact-trft
              protocol: UDP
            - containerPort: 6832
              name: jg-binary-trft
              protocol: UDP
            - containerPort: 14271
              name: admin-http
              protocol: TCP
          args:
            - --reporter.grpc.host-port=dns:///{{ $values.tracing.jaegerCollectorHost }}:{{ $values.tracing.jaegerCollectorGrpcPort }}
            - --reporter.type=grpc
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: node-pv
          persistentVolumeClaim:
            claimName: node-pv-node-{{ $index }}
{{- end }}